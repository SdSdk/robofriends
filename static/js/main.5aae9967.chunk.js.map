{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchh.js","components/Scrolll.js","containers/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","username","Searchh","searchfun","type","placeholder","onChange","Scrolll","props","style","overflow","height","border","children","ErrorBoundary","state","hasError","error","info","this","setState","hasErrors","Component","App","searchingg","event","searchfield","target","value","console","log","robotss","filteredrobots","filter","robo","toLowerCase","includes","length","fetch","then","res","json","users","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2PAgBeA,EAdJ,SAAC,GACX,IADYC,EACb,EADaA,KAAKC,EAClB,EADkBA,MAAMC,EACxB,EADwBA,GAErB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACA,6BAAKF,IACL,4BAAIC,WCiBAK,EAxBA,SAAC,GACf,IADgBC,EACjB,EADiBA,OAGhB,OAGD,8BAGAA,EAAOC,KAAI,SAACC,GAER,OACI,cAAC,EAAD,CAAqBP,GAAIO,EAAKP,GAAIF,KAAMS,EAAKT,KAAMC,MAAOQ,EAAKC,UAAnDD,EAAKP,UCFVS,EAVD,SAAC,GACd,IADeC,EAChB,EADgBA,UAEb,OACI,qBAAKT,UAAU,MAAf,SACP,uBAAOA,UAAU,mCAAmCU,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCIzFI,G,OARD,SAACC,GAEX,OACJ,qBAAKC,MAAO,CAACC,SAAU,SAASC,OAAO,QAAQC,OAAO,mBAAtD,SACKJ,EAAMK,aCuBIC,E,kDAzBX,WAAYN,GACX,IAAD,8BACI,cAAMA,IACDO,MAAM,CACPC,UAAS,GAHjB,E,qDAOA,SAAkBC,EAAMC,GAEtBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG1B,WAEI,OAAGG,KAAKJ,MAAMM,UAEJ,6CAGCF,KAAKX,MAAMK,a,GAtBFS,aCmEbC,E,kDA1DX,aACC,IAAD,8BACI,gBAOJC,WAAW,SAACC,GAER,EAAKL,SAAS,CAACM,YAAYD,EAAME,OAAOC,QACxCC,QAAQC,IAAIL,EAAME,OAAOC,QATzB,EAAKb,MAAM,CACPgB,QAAQ,GACRL,YAAY,IAJpB,E,0CAaA,WACC,IAAD,OAEUM,EAAeb,KAAKJ,MAAMgB,QAAQE,QAAO,SAACC,GAE5C,OACIA,EAAK3C,KAAK4C,cAAcC,SAAS,EAAKrB,MAAMW,YAAYS,kBAIhE,OAA+B,IAA5BhB,KAAKJ,MAAMgB,QAAQM,OAGd,yCAMA,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACC,cAAC,EAAD,CAASS,UAAWgB,KAAKK,aACzB,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQkC,a,+BAYvC,WACC,IAAD,OACIM,MAAM,8CACLC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAW,EAAKtB,SAAS,CAACW,QAAQW,W,GAzD/BpB,aCIHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACN,8BACC,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.5aae9967.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons'\r\nconst Card=({name,email,id}) =>\r\n{\r\n   return(\r\n       <div className='tc bg-light-green dib br3 pd3 ma2 grow shadow-5 bw7'>\r\n           <img alt='robots' src={`https://robohash.org/${id}?200x200`}></img>\r\n           <div>\r\n           <h1>{name}</h1>\r\n           <p>{email}</p>\r\n           </div>\r\n      \r\n       </div>\r\n   );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList=({robots}) =>\r\n{\r\n   \r\n return(\r\n     \r\n     \r\n<div>\r\n   {\r\n\r\nrobots.map((user) =>\r\n{\r\n    return(\r\n        <Card key ={user.id} id={user.id} name={user.name} email={user.username}/>\r\n    );\r\n})\r\n\r\n\r\n   }\r\n</div>\r\n\r\n );\r\n \r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst Searchh=({searchfun})=>\r\n{\r\n   return(\r\n       <div className='pa3'>\r\n<input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Search Robots' onChange={searchfun}></input>\r\n       </div>\r\n       \r\n   )\r\n}\r\n\r\nexport default Searchh;","import React from 'react';\r\n\r\nconst Scrolll=(props) =>\r\n{\r\n    return(\r\n<div style={{overflow: 'scroll',height:'800px',border:'5px solid green'}}>\r\n    {props.children}\r\n</div>\r\n    );\r\n}\r\nexport default Scrolll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info)\r\n    {\r\n      this.setState({hasError:true})\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(this.state.hasErrors)\r\n        {\r\n            return<h1>OOPS.......</h1>\r\n        }\r\n        \r\n            return this.props.children\r\n      \r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import { render } from '@testing-library/react';\r\nimport React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport {robots} from '../robots';\r\nimport Searchh from '../components/Searchh';\r\nimport  './App.css'\r\nimport Scrolll from '../components/Scrolll'\r\nimport ErrorBoundary from './ErrorBoundary'\r\nclass App extends Component\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state={\r\n            robotss:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    searchingg=(event)=>\r\n    {\r\n        this.setState({searchfield:event.target.value})\r\n        console.log(event.target.value);\r\n    }\r\n    render()\r\n    {\r\n\r\n        const filteredrobots=this.state.robotss.filter((robo)=>\r\n        {\r\n            return (\r\n                robo.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n            )\r\n        })\r\n\r\n        if(this.state.robotss.length===0)\r\n        {\r\n            return(\r\n                <h1>Loading</h1>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                     <Searchh searchfun={this.searchingg}/>\r\n                     <Scrolll>\r\n                         <ErrorBoundary>\r\n                         <CardList robots={filteredrobots}/>\r\n                         </ErrorBoundary>\r\n                     \r\n                     </Scrolll>\r\n           \r\n                </div>\r\n           \r\n            )\r\n        }\r\n      \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then((res) => res.json())\r\n        .then((users) => {this.setState({robotss:users})})\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <div>\n    <App />\n   </div>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}